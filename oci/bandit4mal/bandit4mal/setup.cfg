[metadata]
name = bandit
summary = Security oriented static analyser for python code.
description_file =
    README.rst
author = PyCQA
author_email = code-quality@python.org
home_page = https://bandit.readthedocs.io/
license = Apache-2.0 license
classifier =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Operating System :: MacOS :: MacOS X
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3 :: Only
    Topic :: Security
project_urls =
    Release notes = https://github.com/PyCQA/bandit/releases

[extras]
yaml =
    PyYAML
toml =
    tomli>=1.1.0; python_version < "3.11"

[entry_points]
console_scripts =
    bandit = bandit.cli.main:main
    bandit-config-generator = bandit.cli.config_generator:main
    bandit-baseline = bandit.cli.baseline:main
bandit.blacklists =
    calls = bandit.blacklists.calls:gen_blacklist
    #imports = bandit.blacklists.imports:gen_blacklist
bandit.formatters =
    csv = bandit.formatters.csv:report
    json = bandit.formatters.json:report
    txt = bandit.formatters.text:report
    xml = bandit.formatters.xml:report
    html = bandit.formatters.html:report
    screen = bandit.formatters.screen:report
    yaml = bandit.formatters.yaml:report
    custom = bandit.formatters.custom:report
bandit.plugins =
    # bandit/plugins/exec.py
    exec_used = bandit.plugins.exec:exec_used

    # bandit/plugins/base64.py
    base64_base64decode = bandit.plugins.base64:b64decode

    # bandit/plugins/base64.py
    base64_base64encode = bandit.plugins.base64:b64encode

    # bandit/plugins/socket.py
    socket_gethostname = bandit.plugins.socket:gethostname

    # bandit/plugins/socket.py
    socket_socket_connect = bandit.plugins.socket:connect

    # bandit/plugins/socket.py
    socket_socket_send = bandit.plugins.socket:send

    # bandit/plugins/socket.py
    socket_socket_sendall = bandit.plugins.socket:sendall

    # bandit/plugins/socket.py
    socket_socket_close = bandit.plugins.socket:close

    # bandit/plugins/socket.py
    socket_socket_settimeout = bandit.plugins.socket:settimeout

    # bandit/plugins/socket.py
    socket_socket_recv = bandit.plugins.socket:recv

    # bandit/plugins/os.py
    os_chmod = bandit.plugins.os:chmod

    # bandit/plugins/os.py
    os_getuid = bandit.plugins.os:getuid

    # bandit/plugins/os.py
    os_system = bandit.plugins.os:system

    # bandit/plugins/os.py
    os_popen = bandit.plugins.os:popen

    # bandit/plugins/os.py
    os_read = bandit.plugins.os:read

    # bandit/plugins/os.py
    os_write = bandit.plugins.os:write

    # bandit/plugins/zlib.py
    zlib_decompress = bandit.plugins.zlib:decompress

    # bandit/plugins/zlib.py
    platform_system = bandit.plugins.platform:system

    # bandit/plugins/urllib.py
    urllib_request_urlopen = bandit.plugins.urllib:urlopen

    # bandit/plugins/urllib.py
    urllib_request_urlretrieve = bandit.plugins.urllib:urlretrieve

    # bandit/plugins/requests.py
    requests_get = bandit.plugins.requests:get

    # bandit/plugins/requests.py
    requests_post = bandit.plugins.requests:post

    # bandit/plugins/requests.py
    requests_request = bandit.plugins.requests:request

    # bandit/plugins/ip_found.py
    ip_found = bandit.plugins.ip_found:ip_found

    # bandit/plugins/url_found.py
    url_found = bandit.plugins.url_found:url_found

    # bandit/plugins/http.py
    http_request = bandit.plugins.http:request

    # bandit/plugins/http.py
    http_getresponse = bandit.plugins.http:getresponse

    # bandit/plugins/http.py
    http_httpserver = bandit.plugins.http:httpserver

    # bandit/plugins/http.py
    http_load = bandit.plugins.http:load

    # bandit/plugins/signal.py
    signal_signal = bandit.plugins.signal:signal

    # bandit/plugins/getpass.py
    getpass_getuser = bandit.plugins.getpass:getuser

    # bandit/plugins/ssl.py
    ssl_read = bandit.plugins.ssl:read

    # bandit/plugins/ssl.py
    ssl_send = bandit.plugins.ssl:send

    # bandit/plugins/tempfile.py
    tempfile_write = bandit.plugins.tempfile:write

    # bandit/plugins/fileinput.py
    fileinput_input = bandit.plugins.fileinput:input

    # bandit/plugins/tarfile.py
    tarfile_open = bandit.plugins.tarfile:open

    # bandit/plugins/shutil.py
    shutil_rmtree = bandit.plugins.shutil:rmtree

    # bandit/plugins/pathlib.py
    pathlib_rmdir = bandit.plugins.pathlib:rmdir

    # bandit/plugins/multiprocessing.py
    multiprocessing_process = bandit.plugins.multiprocessing:process

    # bandit/plugins/multiprocessing.py
    multiprocessing_pool = bandit.plugins.multiprocessing:pool

    # bandit/plugins/concurrent.py
    concurrent_executor = bandit.plugins.concurrent:executor

    # bandit/plugins/ctypes.py
    ctypes_cdll = bandit.plugins.ctypes:cdll

    # bandit/plugins/code.py
    code_runsource = bandit.plugins.code:runsource

    # bandit/plugins/code.py
    compileall_compile_file = bandit.plugins.compileall:compile_file

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source

[pbr]
autodoc_tree_index_modules = True
autodoc_tree_excludes =
  examples*
